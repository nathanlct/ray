{"version":3,"sources":["components/TitleCard.tsx","type/actor.ts","components/StatusChip.tsx","components/SearchComponent.tsx","util/hook.ts","util/converter.ts","components/PercentageBar.tsx","components/StatesCounter.tsx","components/Loading.tsx","../node_modules/@material-ui/core/esm/Switch/Switch.js","../node_modules/@material-ui/core/esm/ButtonGroup/ButtonGroup.js","pages/node/index.tsx","pages/node/hook/useNodeList.ts"],"names":["useStyles","makeStyles","theme","card","padding","spacing","paddingTop","margin","map","e","join","title","fontSize","typography","fontWeight","color","palette","text","secondary","marginBottom","body","TitleCard","children","classes","className","ActorEnum","colorMap","node","ALIVE","green","DEAD","red","actor","PENDING","blue","RECONSTRUCTING","lightBlue","job","INIT","grey","SUBMITTED","DISPATCHED","RUNNING","COMPLETED","cyan","FINISHED","FAILED","typeMap","deps","INFO","ERROR","StatusChip","type","status","suffix","style","border","borderRadius","blueGrey","borderColor","backgroundColor","search","marginTop","SearchInput","label","onChange","defaultValue","size","InputProps","value","target","endAdornment","position","SearchSelect","options","select","SelectProps","width","useFilter","useState","filters","setFilters","changeFilter","key","val","f","find","push","filterFunc","instance","every","get","toString","includes","useSorter","initialSortKey","desc","sorter","setSorter","sorterFunc","instanceA","instanceB","b","a","setSortKey","setOrderDesc","sorterKey","memoryConverter","bytes","toFixed","useStyle","container","background","height","lineHeight","boxSizing","displayBar","paper","right","transition","borderTopLeftRadius","borderBottomLeftRadius","zIndex","primary","textAlign","PercentageBar","props","num","total","per","Math","round","min","max","StateCounter","list","stateMap","forEach","state","alignItems","item","length","Object","entries","s","Loading","loading","open","Switch","React","ref","_props$color","_props$edge","edge","_props$size","other","_objectWithoutProperties","icon","thumb","clsx","root","edgeStart","edgeEnd","concat","capitalize","SwitchBase","_extends","checkedIcon","switchBase","input","checked","disabled","track","withStyles","display","overflow","flexShrink","verticalAlign","colorAdjust","marginLeft","marginRight","top","left","transitions","create","duration","shortest","transform","opacity","colorPrimary","main","fade","action","hoverOpacity","common","black","white","colorSecondary","sizeSmall","boxShadow","shadows","name","Button","styles","ButtonGroup","_props$component","component","Component","_props$disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","_props$disableRipple","disableRipple","_props$fullWidth","fullWidth","_props$orientation","orientation","_props$variant","variant","buttonClassName","grouped","role","contained","vertical","child","shape","flexDirection","minWidth","groupedHorizontal","borderTopRightRadius","borderBottomRightRadius","groupedVertical","groupedText","groupedTextHorizontal","borderRight","groupedTextVertical","borderBottom","groupedTextPrimary","groupedTextSecondary","groupedOutlined","groupedOutlinedHorizontal","borderRightColor","groupedOutlinedVertical","borderBottomColor","groupedOutlinedPrimary","groupedOutlinedSecondary","groupedContained","groupedContainedHorizontal","groupedContainedVertical","groupedContainedPrimary","dark","groupedContainedSecondary","columns","brpcLinkChanger","href","location","window","pathArr","pathname","split","some","index","findIndex","resultArr","slice","protocol","host","NodeCard","raylet","hostname","ip","cpu","mem","networkSpeed","disk","logUrl","nodeId","Paper","textDecoration","to","Grid","xs","Number","used","percent","justify","encodeURIComponent","Nodes","nodeList","setList","msg","setMsg","isRefreshing","setRefresh","mode","setMode","filter","setFilter","pageSize","pageNo","page","setPage","tot","useRef","getList","useCallback","getNodeList","data","rspData","summary","current","setTimeout","useEffect","clearTimeout","sort","onSwitchChange","event","originalNodes","useNodeList","startsWith","inputProps","trim","_","onClick","Pagination","count","ceil","TableContainer","Table","TableHead","TableRow","col","TableCell","align","TableBody","i","Tooltip","arrow","interactive"],"mappings":"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","file":"static/js/11.61f9e23e.chunk.js","sourcesContent":["import { makeStyles, Paper } from \"@material-ui/core\";\nimport React, { PropsWithChildren, ReactNode } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(1.5),\n    margin: [theme.spacing(2), theme.spacing(1)].map((e) => `${e}px`).join(\" \"),\n  },\n  title: {\n    fontSize: theme.typography.fontSize + 2,\n    fontWeight: 500,\n    color: theme.palette.text.secondary,\n    marginBottom: theme.spacing(1),\n  },\n  body: {\n    padding: theme.spacing(0.5),\n  },\n}));\n\nconst TitleCard = ({\n  title,\n  children,\n}: PropsWithChildren<{ title: ReactNode | string }>) => {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.card}>\n      <div className={classes.title}>{title}</div>\n      <div className={classes.body}>{children}</div>\n    </Paper>\n  );\n};\n\nexport default TitleCard;\n","export enum ActorEnum {\n  ALIVE = \"ALIVE\",\n  PENDING = \"PENDING\",\n  RECONSTRUCTING = \"RECONSTRUCTING\",\n  DEAD = \"DEAD\",\n}\n\nexport type Address = {\n  rayletId: string;\n  ipAddress: string;\n  port: number;\n  workerId: string;\n};\n\nexport type TaskSpec = {\n  actorCreationTaskSpec: {\n    actorId: string;\n    dynamicWorkerOptions: string[];\n    extensionData: string;\n    isAsyncio: boolean;\n    isDetached: boolean;\n    maxActorRestarts: boolean;\n    maxConcurrency: number;\n    name: string;\n  };\n  args: {\n    data: string;\n    metadata: string;\n    nestedInlinedIds: string[];\n    objectIds: string[];\n  }[];\n  callerAddress: {\n    ipAddress: string;\n    port: number;\n    rayletId: string;\n    workerId: string;\n  };\n  callerId: string;\n  functionDescriptor: {\n    javaFunctionDescriptor: {\n      className: string;\n      functionName: string;\n      signature: string;\n    };\n    pythonFunctionDescriptor: {\n      className: string;\n      functionName: string;\n      signature: string;\n    };\n  };\n  jobId: string;\n  language: string;\n  maxRetries: number;\n  numReturns: string;\n  parentCounter: string;\n  parentTaskId: string;\n  requiredPlacementResources: {\n    [key: string]: number;\n  };\n  requiredResources: {\n    [key: string]: number;\n  };\n  sourceActorId: string;\n  taskId: string;\n  type: string;\n};\n\nexport type Actor = {\n  actorId: string;\n  children: { [key: string]: Actor };\n  taskSpec: TaskSpec;\n  ipAddress: string;\n  isDirectCall: boolean;\n  jobId: string;\n  numExecutedTasks: number;\n  numLocalObjects: number;\n  numObjectIdsInScope: number;\n  state: ActorEnum | string; // PENDING, ALIVE, RECONSTRUCTING, DEAD\n  taskQueueLength: number;\n  usedObjectStoreMemory: number;\n  usedResources: { [key: string]: string | number };\n  timestamp: number;\n  actorTitle: string;\n  averageTaskExecutionSpeed: number;\n  nodeId: string;\n  pid: number;\n  ownerAddress: Address;\n  address: Address;\n  maxReconstructions: string;\n  remainingReconstructions: string;\n  isDetached: false;\n  name: string;\n  numRestarts: string;\n};\n","import { Color } from \"@material-ui/core\";\nimport {\n  blue,\n  blueGrey,\n  cyan,\n  green,\n  grey,\n  lightBlue,\n  red,\n} from \"@material-ui/core/colors\";\nimport { CSSProperties } from \"@material-ui/core/styles/withStyles\";\nimport React, { ReactNode } from \"react\";\nimport { ActorEnum } from \"../type/actor\";\n\nconst colorMap = {\n  node: {\n    ALIVE: green,\n    DEAD: red,\n  },\n  actor: {\n    [ActorEnum.ALIVE]: green,\n    [ActorEnum.DEAD]: red,\n    [ActorEnum.PENDING]: blue,\n    [ActorEnum.RECONSTRUCTING]: lightBlue,\n  },\n  job: {\n    INIT: grey,\n    SUBMITTED: blue,\n    DISPATCHED: lightBlue,\n    RUNNING: green,\n    COMPLETED: cyan,\n    FINISHED: cyan,\n    FAILED: red,\n  },\n} as {\n  [key: string]: {\n    [key: string]: Color;\n  };\n};\n\nconst typeMap = {\n  deps: blue,\n  INFO: cyan,\n  ERROR: red,\n} as {\n  [key: string]: Color;\n};\n\nexport const StatusChip = ({\n  type,\n  status,\n  suffix,\n}: {\n  type: string;\n  status: string | ActorEnum | ReactNode;\n  suffix?: string;\n}) => {\n  const style = {\n    padding: \"2px 8px\",\n    border: \"solid 1px\",\n    borderRadius: 4,\n    fontSize: 12,\n    margin: 2,\n  } as CSSProperties;\n\n  let color = blueGrey as Color;\n\n  if (typeMap[type]) {\n    color = typeMap[type];\n  } else if (\n    typeof status === \"string\" &&\n    colorMap[type] &&\n    colorMap[type][status]\n  ) {\n    color = colorMap[type][status];\n  }\n\n  style.color = color[500];\n  style.borderColor = color[500];\n  if (color !== blueGrey) {\n    style.backgroundColor = `${color[500]}20`;\n  }\n\n  return (\n    <span style={style}>\n      {status}\n      {suffix}\n    </span>\n  );\n};\n","import {\n  InputAdornment,\n  makeStyles,\n  MenuItem,\n  TextField,\n} from \"@material-ui/core\";\nimport { SearchOutlined } from \"@material-ui/icons\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    margin: theme.spacing(1),\n    marginTop: 0,\n  },\n}));\n\nexport const SearchInput = ({\n  label,\n  onChange,\n  defaultValue,\n}: {\n  label: string;\n  defaultValue?: string;\n  onChange?: (value: string) => void;\n}) => {\n  const classes = useStyles();\n\n  return (\n    <TextField\n      className={classes.search}\n      size=\"small\"\n      label={label}\n      InputProps={{\n        onChange: ({ target: { value } }) => {\n          if (onChange) {\n            onChange(value);\n          }\n        },\n        defaultValue,\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <SearchOutlined />\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n};\n\nexport const SearchSelect = ({\n  label,\n  onChange,\n  options,\n}: {\n  label: string;\n  onChange?: (value: string) => void;\n  options: (string | [string, string])[];\n}) => {\n  const classes = useStyles();\n  return (\n    <TextField\n      className={classes.search}\n      size=\"small\"\n      label={label}\n      select\n      SelectProps={{\n        onChange: ({ target: { value } }) => {\n          if (onChange) {\n            onChange(value as string);\n          }\n        },\n        style: {\n          width: 100,\n        },\n      }}\n    >\n      <MenuItem value=\"\">All</MenuItem>\n      {options.map((e) =>\n        typeof e === \"string\" ? (\n          <MenuItem value={e}>{e}</MenuItem>\n        ) : (\n          <MenuItem value={e[0]}>{e[1]}</MenuItem>\n        ),\n      )}\n    </TextField>\n  );\n};\n","import { get } from \"lodash\";\nimport { useState } from \"react\";\n\nexport const useFilter = <KeyType extends string>() => {\n  const [filters, setFilters] = useState<{ key: KeyType; val: string }[]>([]);\n  const changeFilter = (key: KeyType, val: string) => {\n    const f = filters.find((e) => e.key === key);\n    if (f) {\n      f.val = val;\n    } else {\n      filters.push({ key, val });\n    }\n    setFilters([...filters]);\n  };\n  const filterFunc = (instance: { [key: string]: any }) => {\n    return filters.every(\n      (f) => !f.val || get(instance, f.key, \"\").toString().includes(f.val),\n    );\n  };\n\n  return {\n    changeFilter,\n    filterFunc,\n  };\n};\n\nexport const useSorter = (initialSortKey?: string) => {\n  const [sorter, setSorter] = useState({\n    key: initialSortKey || \"\",\n    desc: false,\n  });\n\n  const sorterFunc = (\n    instanceA: { [key: string]: any },\n    instanceB: { [key: string]: any },\n  ) => {\n    if (!sorter.key) {\n      return 0;\n    }\n\n    let [b, a] = [instanceA, instanceB];\n    if (sorter.desc) {\n      [a, b] = [instanceA, instanceB];\n    }\n\n    if (!get(a, sorter.key)) {\n      return -1;\n    }\n\n    if (!get(b, sorter.key)) {\n      return 1;\n    }\n\n    return get(a, sorter.key) > get(b, sorter.key) ? 1 : -1;\n  };\n\n  return {\n    sorterFunc,\n    setSortKey: (key: string) => setSorter({ ...sorter, key }),\n    setOrderDesc: (desc: boolean) => setSorter({ ...sorter, desc }),\n    sorterKey: sorter.key,\n  };\n};\n","export const memoryConverter = (bytes: number) => {\n  if (bytes < 1024) {\n    return `${bytes}KB`;\n  }\n\n  if (bytes < 1024 ** 2) {\n    return `${(bytes / 1024 ** 1).toFixed(2)}KB`;\n  }\n\n  if (bytes < 1024 ** 3) {\n    return `${(bytes / 1024 ** 2).toFixed(2)}MB`;\n  }\n\n  if (bytes < 1024 ** 4) {\n    return `${(bytes / 1024 ** 3).toFixed(2)}GB`;\n  }\n\n  if (bytes < 1024 ** 5) {\n    return `${(bytes / 1024 ** 4).toFixed(2)}TB`;\n  }\n\n  if (bytes < 1024 ** 6) {\n    return `${(bytes / 1024 ** 5).toFixed(2)}TB`;\n  }\n\n  return \"\";\n};\n","import { makeStyles } from \"@material-ui/core\";\nimport React, { PropsWithChildren } from \"react\";\n\nconst useStyle = makeStyles((theme) => ({\n  container: {\n    background: \"linear-gradient(45deg, #21CBF3ee 30%, #2196F3ee 90%)\",\n    border: `1px solid #ffffffbb`,\n    padding: \"0 12px\",\n    height: 18,\n    lineHeight: \"18px\",\n    position: \"relative\",\n    boxSizing: \"content-box\",\n    borderRadius: 4,\n  },\n  displayBar: {\n    background: theme.palette.background.paper,\n    position: \"absolute\",\n    right: 0,\n    height: 18,\n    transition: \"0.5s width\",\n    borderRadius: 2,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    border: \"2px solid transparent\",\n    boxSizing: \"border-box\",\n  },\n  text: {\n    fontSize: 12,\n    zIndex: 2,\n    position: \"relative\",\n    color: theme.palette.text.primary,\n    width: \"100%\",\n    textAlign: \"center\",\n  },\n}));\n\nconst PercentageBar = (\n  props: PropsWithChildren<{ num: number; total: number }>,\n) => {\n  const { num, total } = props;\n  const classes = useStyle();\n  const per = Math.round((num / total) * 100);\n\n  return (\n    <div className={classes.container}>\n      <div\n        className={classes.displayBar}\n        style={{\n          width: `${Math.min(Math.max(0, 100 - per), 100)}%`,\n        }}\n      />\n      <div className={classes.text}>{props.children}</div>\n    </div>\n  );\n};\n\nexport default PercentageBar;\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { StatusChip } from \"./StatusChip\";\n\nconst StateCounter = ({\n  type,\n  list,\n}: {\n  type: string;\n  list: { state: string }[];\n}) => {\n  const stateMap = {} as { [state: string]: number };\n  list.forEach(({ state }) => {\n    stateMap[state] = stateMap[state] + 1 || 1;\n  });\n\n  return (\n    <Grid container spacing={2} alignItems=\"center\">\n      <Grid item>\n        <StatusChip status=\"TOTAL\" type={type} suffix={`x ${list.length}`} />\n      </Grid>\n      {Object.entries(stateMap).map(([s, num]) => (\n        <Grid item>\n          <StatusChip status={s} type={type} suffix={` x ${num}`} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default StateCounter;\n","import { Backdrop, CircularProgress } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst Loading = ({ loading }: { loading: boolean }) => (\n  <Backdrop open={loading} style={{ zIndex: 100 }}>\n    <CircularProgress color=\"primary\" />\n  </Backdrop>\n);\n\nexport default Loading;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport { fade } from '../styles/colorManipulator';\nimport withStyles from '../styles/withStyles';\nimport Button from '../Button'; // Force a side effect so we don't have any override priority issue.\n// eslint-disable-next-line no-unused-expressions\n\nButton.styles;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      boxShadow: theme.shadows[2]\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none'\n    },\n\n    /* Pseudo-class applied to child elements if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {\n      minWidth: 40\n    },\n\n    /* Styles applied to the children if `orientation=\"horizontal\"`. */\n    groupedHorizontal: {\n      '&:not(:first-child)': {\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `orientation=\"vertical\"`. */\n    groupedVertical: {\n      '&:not(:first-child)': {\n        borderTopRightRadius: 0,\n        borderTopLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderBottomRightRadius: 0,\n        borderBottomLeftRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"`. */\n    groupedText: {},\n\n    /* Styles applied to the children if `variant=\"text\"` and `orientation=\"horizontal\"`. */\n    groupedTextHorizontal: {\n      '&:not(:last-child)': {\n        borderRight: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `orientation=\"vertical\"`. */\n    groupedTextVertical: {\n      '&:not(:last-child)': {\n        borderBottom: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `color=\"primary\"`. */\n    groupedTextPrimary: {\n      '&:not(:last-child)': {\n        borderColor: fade(theme.palette.primary.main, 0.5)\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `color=\"secondary\"`. */\n    groupedTextSecondary: {\n      '&:not(:last-child)': {\n        borderColor: fade(theme.palette.secondary.main, 0.5)\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"`. */\n    groupedOutlined: {},\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `orientation=\"horizontal\"`. */\n    groupedOutlinedHorizontal: {\n      '&:not(:first-child)': {\n        marginLeft: -1\n      },\n      '&:not(:last-child)': {\n        borderRightColor: 'transparent'\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `orientation=\"vertical\"`. */\n    groupedOutlinedVertical: {\n      '&:not(:first-child)': {\n        marginTop: -1\n      },\n      '&:not(:last-child)': {\n        borderBottomColor: 'transparent'\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `color=\"primary\"`. */\n    groupedOutlinedPrimary: {\n      '&:hover': {\n        borderColor: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    groupedOutlinedSecondary: {\n      '&:hover': {\n        borderColor: theme.palette.secondary.main\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"`. */\n    groupedContained: {\n      boxShadow: 'none'\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `orientation=\"horizontal\"`. */\n    groupedContainedHorizontal: {\n      '&:not(:last-child)': {\n        borderRight: \"1px solid \".concat(theme.palette.grey[400]),\n        '&$disabled': {\n          borderRight: \"1px solid \".concat(theme.palette.action.disabled)\n        }\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `orientation=\"vertical\"`. */\n    groupedContainedVertical: {\n      '&:not(:last-child)': {\n        borderBottom: \"1px solid \".concat(theme.palette.grey[400]),\n        '&$disabled': {\n          borderBottom: \"1px solid \".concat(theme.palette.action.disabled)\n        }\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `color=\"primary\"`. */\n    groupedContainedPrimary: {\n      '&:not(:last-child)': {\n        borderColor: theme.palette.primary.dark\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `color=\"secondary\"`. */\n    groupedContainedSecondary: {\n      '&:not(:last-child)': {\n        borderColor: theme.palette.secondary.dark\n      }\n    }\n  };\n};\nvar ButtonGroup = /*#__PURE__*/React.forwardRef(function ButtonGroup(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$disableRipple = props.disableRipple,\n      disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'outlined' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"disableRipple\", \"fullWidth\", \"orientation\", \"size\", \"variant\"]);\n\n  var buttonClassName = clsx(classes.grouped, classes[\"grouped\".concat(capitalize(orientation))], classes[\"grouped\".concat(capitalize(variant))], classes[\"grouped\".concat(capitalize(variant)).concat(capitalize(orientation))], classes[\"grouped\".concat(capitalize(variant)).concat(color !== 'default' ? capitalize(color) : '')], disabled && classes.disabled);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"group\",\n    className: clsx(classes.root, className, fullWidth && classes.fullWidth, disableElevation && classes.disableElevation, variant === 'contained' && classes.contained, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other), React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The ButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: clsx(buttonClassName, child.props.className),\n      color: child.props.color || color,\n      disabled: child.props.disabled || disabled,\n      disableElevation: child.props.disableElevation || disableElevation,\n      disableFocusRipple: disableFocusRipple,\n      disableRipple: disableRipple,\n      fullWidth: fullWidth,\n      size: child.props.size || size,\n      variant: child.props.variant || variant\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button group.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the buttons will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the button keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the button ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the buttons will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The group orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButtonGroup'\n})(ButtonGroup);","import {\n  Button,\n  ButtonGroup,\n  Grid,\n  Paper,\n  Switch,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../../components/Loading\";\nimport PercentageBar from \"../../components/PercentageBar\";\nimport { SearchInput, SearchSelect } from \"../../components/SearchComponent\";\nimport StateCounter from \"../../components/StatesCounter\";\nimport { StatusChip } from \"../../components/StatusChip\";\nimport TitleCard from \"../../components/TitleCard\";\nimport { NodeDetail } from \"../../type/node\";\nimport { memoryConverter } from \"../../util/converter\";\nimport { useNodeList } from \"./hook/useNodeList\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n    position: \"relative\",\n  },\n}));\n\nconst columns = [\n  \"State\",\n  \"ID\",\n  \"Host\",\n  \"IP\",\n  \"CPU Usage\",\n  \"Memory\",\n  \"Disk(root)\",\n  \"Sent\",\n  \"Received\",\n  \"Log\",\n];\n\nexport const brpcLinkChanger = (href: string) => {\n  const { location } = window;\n  const { pathname } = location;\n  const pathArr = pathname.split(\"/\");\n  if (pathArr.some((e) => e.split(\".\").length > 1)) {\n    const index = pathArr.findIndex((e) => e.includes(\".\"));\n    const resultArr = pathArr.slice(0, index);\n    resultArr.push(href);\n    return `${location.protocol}//${location.host}${resultArr.join(\"/\")}`;\n  }\n\n  return `http://${href}`;\n};\n\nexport const NodeCard = (props: { node: NodeDetail }) => {\n  const { node } = props;\n\n  if (!node) {\n    return null;\n  }\n\n  const { raylet, hostname, ip, cpu, mem, networkSpeed, disk, logUrl } = node;\n  const { nodeId, state } = raylet;\n\n  return (\n    <Paper variant=\"outlined\" style={{ padding: \"12px 12px\", margin: 12 }}>\n      <p style={{ fontWeight: \"bold\", fontSize: 12, textDecoration: \"none\" }}>\n        <Link to={`node/${nodeId}`}>{nodeId}</Link>{\" \"}\n      </p>\n      <p>\n        <Grid container spacing={1}>\n          <Grid item>\n            <StatusChip type=\"node\" status={state} />\n          </Grid>\n          <Grid item>\n            {hostname}({ip})\n          </Grid>\n          {networkSpeed && networkSpeed[0] >= 0 && (\n            <Grid item>\n              <span style={{ fontWeight: \"bold\" }}>Sent</span>{\" \"}\n              {memoryConverter(networkSpeed[0])}/s{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>Received</span>{\" \"}\n              {memoryConverter(networkSpeed[1])}/s\n            </Grid>\n          )}\n        </Grid>\n      </p>\n      <Grid container spacing={1} alignItems=\"baseline\">\n        {cpu >= 0 && (\n          <Grid item xs>\n            CPU\n            <PercentageBar num={Number(cpu)} total={100}>\n              {cpu}%\n            </PercentageBar>\n          </Grid>\n        )}\n        {mem && (\n          <Grid item xs>\n            Memory\n            <PercentageBar num={Number(mem[0] - mem[1])} total={mem[0]}>\n              {memoryConverter(mem[0] - mem[1])}/{memoryConverter(mem[0])}(\n              {mem[2]}%)\n            </PercentageBar>\n          </Grid>\n        )}\n        {disk && disk[\"/\"] && (\n          <Grid item xs>\n            Disk('/')\n            <PercentageBar num={Number(disk[\"/\"].used)} total={disk[\"/\"].total}>\n              {memoryConverter(disk[\"/\"].used)}/\n              {memoryConverter(disk[\"/\"].total)}({disk[\"/\"].percent}%)\n            </PercentageBar>\n          </Grid>\n        )}\n      </Grid>\n      <Grid container justify=\"flex-end\" spacing={1} style={{ margin: 8 }}>\n        <Grid>\n          <Button>\n            <Link to={`/log/${encodeURIComponent(logUrl)}`}>log</Link>\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nconst Nodes = () => {\n  const classes = useStyles();\n  const {\n    msg,\n    isRefreshing,\n    onSwitchChange,\n    nodeList,\n    changeFilter,\n    page,\n    setPage,\n    setSortKey,\n    setOrderDesc,\n    mode,\n    setMode,\n  } = useNodeList();\n\n  return (\n    <div className={classes.root}>\n      <Loading loading={msg.startsWith(\"Loading\")} />\n      <TitleCard title=\"NODES\">\n        Auto Refresh:\n        <Switch\n          checked={isRefreshing}\n          onChange={onSwitchChange}\n          name=\"refresh\"\n          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n        />\n        <br />\n        Request Status: {msg}\n      </TitleCard>\n      <TitleCard title=\"Statistics\">\n        <StateCounter type=\"node\" list={nodeList} />\n      </TitleCard>\n      <TitleCard title=\"Node List\">\n        <Grid container alignItems=\"center\">\n          <Grid item>\n            <SearchInput\n              label=\"Host\"\n              onChange={(value) => changeFilter(\"hostname\", value.trim())}\n            />\n          </Grid>\n          <Grid item>\n            <SearchInput\n              label=\"IP\"\n              onChange={(value) => changeFilter(\"ip\", value.trim())}\n            />\n          </Grid>\n          <Grid item>\n            <SearchSelect\n              label=\"State\"\n              onChange={(value) => changeFilter(\"state\", value.trim())}\n              options={[\"ALIVE\", \"DEAD\"]}\n            />\n          </Grid>\n          <Grid item>\n            <SearchInput\n              label=\"Page Size\"\n              onChange={(value) =>\n                setPage(\"pageSize\", Math.min(Number(value), 500) || 10)\n              }\n            />\n          </Grid>\n          <Grid item>\n            <SearchSelect\n              label=\"Sort By\"\n              options={[\n                [\"state\", \"State\"],\n                [\"mem[2]\", \"Used Memory\"],\n                [\"mem[0]\", \"Total Memory\"],\n                [\"cpu\", \"CPU\"],\n                [\"networkSpeed[0]\", \"Sent\"],\n                [\"networkSpeed[1]\", \"Received\"],\n                [\"disk./.used\", \"Used Disk\"],\n              ]}\n              onChange={(val) => setSortKey(val)}\n            />\n          </Grid>\n          <Grid item>\n            <span style={{ margin: 8, marginTop: 0 }}>\n              Reverse:\n              <Switch onChange={(_, checked) => setOrderDesc(checked)} />\n            </span>\n          </Grid>\n          <Grid item>\n            <ButtonGroup size=\"small\">\n              <Button\n                onClick={() => setMode(\"table\")}\n                color={mode === \"table\" ? \"primary\" : \"default\"}\n              >\n                Table\n              </Button>\n              <Button\n                onClick={() => setMode(\"card\")}\n                color={mode === \"card\" ? \"primary\" : \"default\"}\n              >\n                Card\n              </Button>\n            </ButtonGroup>\n          </Grid>\n        </Grid>\n        <div>\n          <Pagination\n            count={Math.ceil(nodeList.length / page.pageSize)}\n            page={page.pageNo}\n            onChange={(e, pageNo) => setPage(\"pageNo\", pageNo)}\n          />\n        </div>\n        {mode === \"table\" && (\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  {columns.map((col) => (\n                    <TableCell align=\"center\" key={col}>\n                      {col}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {nodeList\n                  .slice(\n                    (page.pageNo - 1) * page.pageSize,\n                    page.pageNo * page.pageSize,\n                  )\n                  .map(\n                    (\n                      {\n                        hostname = \"\",\n                        ip = \"\",\n                        cpu = 0,\n                        mem = [],\n                        disk,\n                        networkSpeed = [0, 0],\n                        raylet,\n                        logUrl,\n                      }: NodeDetail,\n                      i,\n                    ) => (\n                      <TableRow key={hostname + i}>\n                        <TableCell>\n                          <StatusChip type=\"node\" status={raylet.state} />\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          <Tooltip title={raylet.nodeId} arrow interactive>\n                            <Link to={`/node/${raylet.nodeId}`}>\n                              {raylet.nodeId.slice(0, 5)}\n                            </Link>\n                          </Tooltip>\n                        </TableCell>\n                        <TableCell align=\"center\">{hostname}</TableCell>\n                        <TableCell align=\"center\">{ip}</TableCell>\n                        <TableCell>\n                          <PercentageBar num={Number(cpu)} total={100}>\n                            {cpu}%\n                          </PercentageBar>\n                        </TableCell>\n                        <TableCell>\n                          <PercentageBar\n                            num={Number(mem[0] - mem[1])}\n                            total={mem[0]}\n                          >\n                            {memoryConverter(mem[0] - mem[1])}/\n                            {memoryConverter(mem[0])}({mem[2]}%)\n                          </PercentageBar>\n                        </TableCell>\n                        <TableCell>\n                          {disk && disk[\"/\"] && (\n                            <PercentageBar\n                              num={Number(disk[\"/\"].used)}\n                              total={disk[\"/\"].total}\n                            >\n                              {memoryConverter(disk[\"/\"].used)}/\n                              {memoryConverter(disk[\"/\"].total)}(\n                              {disk[\"/\"].percent}%)\n                            </PercentageBar>\n                          )}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {memoryConverter(networkSpeed[0])}/s\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {memoryConverter(networkSpeed[1])}/s\n                        </TableCell>\n                        <TableCell>\n                          <Link to={`/log/${encodeURIComponent(logUrl)}`}>\n                            Log\n                          </Link>\n                        </TableCell>\n                      </TableRow>\n                    ),\n                  )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n        {mode === \"card\" && (\n          <Grid container>\n            {nodeList\n              .slice(\n                (page.pageNo - 1) * page.pageSize,\n                page.pageNo * page.pageSize,\n              )\n              .map((e) => (\n                <Grid item xs={6}>\n                  <NodeCard node={e} />\n                </Grid>\n              ))}\n          </Grid>\n        )}\n      </TitleCard>\n    </div>\n  );\n};\n\nexport default Nodes;\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { getNodeList } from \"../../../service/node\";\nimport { NodeDetail } from \"../../../type/node\";\nimport { useSorter } from \"../../../util/hook\";\n\nexport const useNodeList = () => {\n  const [nodeList, setList] = useState<NodeDetail[]>([]);\n  const [msg, setMsg] = useState(\"Loading the nodes infos...\");\n  const [isRefreshing, setRefresh] = useState(true);\n  const [mode, setMode] = useState(\"table\");\n  const [filter, setFilter] = useState<\n    { key: \"hostname\" | \"ip\" | \"state\"; val: string }[]\n  >([]);\n  const [page, setPage] = useState({ pageSize: 10, pageNo: 1 });\n  const { sorterFunc, setOrderDesc, setSortKey, sorterKey } = useSorter(\"cpu\");\n  const tot = useRef<NodeJS.Timeout>();\n  const changeFilter = (key: \"hostname\" | \"ip\" | \"state\", val: string) => {\n    const f = filter.find((e) => e.key === key);\n    if (f) {\n      f.val = val;\n    } else {\n      filter.push({ key, val });\n    }\n    setFilter([...filter]);\n  };\n  const onSwitchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRefresh(event.target.checked);\n  };\n  const getList = useCallback(async () => {\n    if (!isRefreshing) {\n      return;\n    }\n    const { data } = await getNodeList();\n    const { data: rspData, msg } = data;\n    setList(rspData.summary || []);\n    if (msg) {\n      setMsg(msg);\n    } else {\n      setMsg(\"\");\n    }\n    tot.current = setTimeout(getList, 4000);\n  }, [isRefreshing]);\n\n  useEffect(() => {\n    getList();\n    return () => {\n      if (tot.current) {\n        clearTimeout(tot.current);\n      }\n    };\n  }, [getList]);\n\n  return {\n    nodeList: nodeList\n      .map((e) => ({ ...e, state: e.raylet.state }))\n      .sort((a, b) => (a.raylet.nodeId > b.raylet.nodeId ? 1 : -1))\n      .sort(sorterFunc)\n      .filter((node) =>\n        filter.every((f) => node[f.key] && node[f.key].includes(f.val)),\n      ),\n    msg,\n    isRefreshing,\n    onSwitchChange,\n    changeFilter,\n    page,\n    originalNodes: nodeList,\n    setPage: (key: string, val: number) => setPage({ ...page, [key]: val }),\n    sorterKey,\n    setSortKey,\n    setOrderDesc,\n    mode,\n    setMode,\n  };\n};\n"],"sourceRoot":""}